# code for plotting from the Demographics 

import pandas as pd
import psycopg2
import numpy as np
from sqlalchemy import create_engine
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib

engine = create_engine('postgresql://username:password@localhost:port/postgres')

# Test connection and list the tables
tables = pd.read_sql("SELECT table_name FROM information_schema.tables WHERE table_schema='public'", engine)
print(tables)

# Query sales data
dem_query = '''
SELECT "AGE", "RACE_CAT", 
"GENDER_CAT", 
SUM("ESTIMATESBASE2020") AS Base_2020, 
SUM("POPESTIMATE2020") AS Est_2020, 
SUM("POPESTIMATE2021") AS Est_2021, 
SUM("POPESTIMATE2022") AS Est_2022, 
SUM("POPESTIMATE2023") AS Est_2023
FROM demographic_stg
GROUP BY "AGE", 
"RACE_CAT", 
"GENDER_CAT", 
ORDER BY "AGE";
'''
df = pd.read_sql_query(query, engine)


# plot the result 

plt.figure(figsize=(30, 25))
sns.barplot(data=df, x='race_cat', y='POPESTIMATE2023', hue='gender_cat', estimator=np.sum)
plt.title("2023 Population by Race and Gender", fontsize=28)
plt.xlabel("Race/Gender", fontsize=24)
plt.ylabel("Population Estimate", fontsize=24)
plt.xticks(rotation=45, fontsize=20)
plt.yticks(fontsize=20)
plt.legend(title='Gender', title_fontsize=22, fontsize=20)
plt.tight_layout()
plt.show()

# Now I want to look at the trends in population predictions (by age) between the different years of reported population

age_query = '''SELECT
  "AGE",
  '2020' AS year,
  "POPESTIMATE2020" AS population
FROM demographic_stg

UNION ALL

SELECT
  "AGE",
  '2021' AS year,
  "POPESTIMATE2021" AS population
FROM demographic_stg

UNION ALL

SELECT
  "AGE",
  '2022' AS year,
  "POPESTIMATE2022" AS population
FROM demographic_stg

UNION ALL

SELECT
  "AGE",
  '2023' AS year,
  "POPESTIMATE2023" AS population
FROM demographic_stg''';

df_age = pd.read_sql_query(query, engine)

plt.figure(figsize=(30, 25))
sns.barplot(data=df_age, x='age', y='population', hue='year')
plt.title("Population Predictions Across Years", fontsize=28)
plt.xlabel("Age", fontsize=24)
plt.ylabel("Population Estimate", fontsize=24)
plt.xticks(rotation=45, fontsize=20)
plt.yticks(fontsize=20)
plt.legend(title='Gender', title_fontsize=22, fontsize=20)
plt.tight_layout()
plt.show()
